<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.gbif</groupId>
  <artifactId>motherpom</artifactId>
  <version>13-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>GBIF Mother POM</name>
  <url>http://github.org/gbif/${project.artifactId}</url>

  <prerequisites>
    <maven>2.2.1</maven>
  </prerequisites>

  <properties>
    <requiredMavenVersion>[2.2,)</requiredMavenVersion>
    <jdkLevel>1.6</jdkLevel>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <cargo.containerId>tomcat7x</cargo.containerId>
    <cargo.containerType>remote</cargo.containerType>
    <cargo.context>${project.artifactId}</cargo.context>

    <github.global.server>github</github.global.server>

    <!--
    Plugin versions.
    Check for available updates: mvn versions:display-plugin-updates
    -->
    <appassembler-maven-plugin.version>1.6</appassembler-maven-plugin.version>
    <cargo-maven2-plugin.version>1.4.5</cargo-maven2-plugin.version>
    <jetty-maven-plugin.version>9.0.6.v20130930</jetty-maven-plugin.version>
    <liquibase-maven-plugin.version>2.0.5</liquibase-maven-plugin.version>
    <maven-archetype-plugin.version>2.2</maven-archetype-plugin.version>
    <maven-assembly-plugin.version>2.4</maven-assembly-plugin.version>
    <maven-clean-plugin.version>2.5</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
    <maven-deploy-plugin.version>2.8.1</maven-deploy-plugin.version>
    <maven-eclipse-plugin.version>2.9</maven-eclipse-plugin.version>
    <maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>
    <maven-install-plugin.version>2.5.1</maven-install-plugin.version>
    <maven-jar-plugin.version>2.4</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>2.9.1</maven-javadoc-plugin.version>
    <maven-jxr-plugin.version>2.3</maven-jxr-plugin.version>
    <maven-project-info-reports-plugin.version>2.7</maven-project-info-reports-plugin.version>
    <maven-release-plugin.version>2.4.2</maven-release-plugin.version>
    <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
    <maven-scm-plugin.version>1.8.1</maven-scm-plugin.version>
    <ghsite-maven-plugin>0.9</ghsite-maven-plugin>
    <maven-site-plugin.version>3.3</maven-site-plugin.version>
    <doxia-module-markdown.version>1.4</doxia-module-markdown.version>
    <maven-source-plugin.version>2.2.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>2.16</maven-surefire-plugin.version>
    <maven-war-plugin.version>2.4</maven-war-plugin.version>
    <rpm-maven-plugin.version>2.0.1</rpm-maven-plugin.version>
    <versions-maven-plugin.version>2.1</versions-maven-plugin.version>

    <!-- RPM property defaults (see comment on "rpm-possible" profile, below) -->
    <rpm.username>gbif</rpm.username>
    <rpm.groupname>gbif</rpm.groupname>
    <rpm.path>/usr/local/${rpm.appname}</rpm.path>
    <jsw.dir>${project.build.directory}/generated-resources/appassembler/jsw/${rpm.appname}</jsw.dir>
    <!-- phase defaults help ensure RPMing will only happen on linux -->
    <jsw.phase>none</jsw.phase>
    <rpm.phase>none</rpm.phase>
  </properties>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>https://raw.github.com/gbif/motherpom/master/LICENSE</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <organization>
    <name>Global Biodiversity Information Facility</name>
    <url>http://www.gbif.org</url>
  </organization>

  <scm>
    <connection>scm:git:git@github.com:gbif/motherpom.git</connection>
    <url>https://github.com/gbif/motherpom</url>
    <developerConnection>scm:git:git@github.com:gbif/motherpom.git</developerConnection>
  </scm>

  <issueManagement>
    <system>JIRA</system>
    <url>http://dev.gbif.org/issues/browse/POR</url>
  </issueManagement>

  <repositories>
    <repository>
      <id>gbif-all</id>
      <url>http://repository.gbif.org/content/groups/gbif</url>
    </repository>
  </repositories>

  <distributionManagement>
    <repository>
      <id>gbif-release</id>
      <url>http://repository.gbif.org/content/repositories/releases</url>
    </repository>
    <snapshotRepository>
      <id>gbif-snapshot</id>
      <url>http://repository.gbif.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <build>
    <pluginManagement>
      <plugins>
        <!-- build sites for github pages -->
        <plugin>
          <groupId>com.github.github</groupId>
          <artifactId>site-maven-plugin</artifactId>
          <version>${ghsite-maven-plugin}</version>
          <configuration>
            <server>github</server>
            <repositoryOwner>gbif</repositoryOwner>
            <message>Generated site for ${project.artifactId} ${project.version}</message>
            <!-- use subfolders for multi module projects
            <path>${project.distributionManagement.site.url}</path>
            -->
            <merge>false</merge>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>site</goal>
              </goals>
              <phase>site-deploy</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
          <configuration>
            <locales>en</locales>
            <skipDeploy>true</skipDeploy>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.doxia</groupId>
              <artifactId>doxia-module-markdown</artifactId>
              <version>${doxia-module-markdown.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-archetype-plugin</artifactId>
          <version>${maven-archetype-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven-assembly-plugin.version}</version>
          <configuration>
            <tarLongFileMode>gnu</tarLongFileMode>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${jdkLevel}</source>
            <target>${jdkLevel}</target>
            <showDeprecation>true</showDeprecation>
            <showWarnings>true</showWarnings>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>${maven-eclipse-plugin.version}</version>
          <configuration>
            <downloadSources>true</downloadSources>
            <downloadJavadocs>true</downloadJavadocs>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <forkMode>always</forkMode>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <argLine>-Xmx256m</argLine>
            <forkedProcessTimeoutInSeconds>1800</forkedProcessTimeoutInSeconds>
            <runOrder>random</runOrder>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addClasspath>true</addClasspath>
              </manifest>
            </archive>
          </configuration>
          <executions>
            <execution>
              <id>attach-test-jar</id>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
          <configuration>
            <docfilessubdirs>true</docfilessubdirs>
            <quiet>true</quiet>
            <linksource>true</linksource>
            <links>
              <link>http://freemarker.org/docs/api</link>
              <link>http://docs.guava-libraries.googlecode.com/git/javadoc</link>
              <link>http://findbugs.sourceforge.net/api</link>
            </links>
          </configuration>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals>
                <goal>jar</goal>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
          <configuration>
            <useReleaseProfile>true</useReleaseProfile>
            <releaseProfiles>gbif-release</releaseProfiles>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-scm-plugin</artifactId>
          <version>${maven-scm-plugin.version}</version>
        </plugin>
        <plugin>
          <!--
              Note: http://jira.codehaus.org/browse/MSOURCES-45,
                    http://jira.codehaus.org/browse/MSOURCES-50
          -->
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <forkMode>always</forkMode>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <argLine>-Xmx256m</argLine>
            <forkedProcessTimeoutInSeconds>300</forkedProcessTimeoutInSeconds>
            <runOrder>random</runOrder>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven-war-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <version>${cargo-maven2-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.liquibase</groupId>
          <artifactId>liquibase-maven-plugin</artifactId>
          <version>${liquibase-maven-plugin.version}</version>
        </plugin>
        <plugin>
          <!--
            http://www.eclipse.org/jetty/documentation/current/jetty-maven-plugin.html
          -->
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <version>${jetty-maven-plugin.version}</version>
        </plugin>

        <!-- these plugins for RPM building (see comment on "rpm-possible" profile, below) -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>appassembler-maven-plugin</artifactId>
          <version>${appassembler-maven-plugin.version}</version>
          <configuration>
            <repositoryLayout>flat</repositoryLayout>
            <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
            <platforms>
              <platform>unix</platform>
            </platforms>
            <daemons>
              <daemon>
                <id>${rpm.appname}</id>
                <mainClass>${rpm.mainclass}</mainClass>
                <platforms>
                  <platform>jsw</platform>
                </platforms>
                <generatorConfigurations>
                  <generatorConfiguration>
                    <generator>jsw</generator>
                    <includes>
                      <include>linux-x86-64</include>
                    </includes>
                    <configuration>
                      <property>
                        <name>wrapper.java.command</name>
                        <value>/usr/bin/java</value>
                      </property>
                      <property>
                        <name>wrapper.logfile</name>
                        <value>logs/wrapper.log</value>
                      </property>
                    </configuration>
                  </generatorConfiguration>
                </generatorConfigurations>
              </daemon>
            </daemons>
          </configuration>
          <executions>
            <execution>
              <id>generate-jsw-scripts</id>
              <phase>${jsw.phase}</phase>
              <goals>
                <goal>generate-daemons</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>rpm-maven-plugin</artifactId>
          <version>${rpm-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>generate-rpm</id>
              <phase>${rpm.phase}</phase>
              <goals>
                <goal>rpm</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <copyright>2012, GBIF</copyright>
            <group>GBIF</group>
            <description>${rpm.appname}: RPM Package</description>
            <needarch>x86_64</needarch>
            <mappings>
              <mapping>
                <directory>${rpm.path}/bin</directory>
                <filemode>774</filemode>
                <username>${rpm.username}</username>
                <groupname>${rpm.groupname}</groupname>
                <sources>
                  <source>
                    <location>${jsw.dir}/bin</location>
                    <excludes>
                      <exclude>*.bat</exclude>
                      <exclude>*.exe</exclude>
                    </excludes>
                  </source>
                </sources>
              </mapping>
              <mapping>
                <directory>${rpm.path}/conf</directory>
                <configuration>true</configuration>
                <filemode>664</filemode>
                <username>${rpm.username}</username>
                <groupname>${rpm.groupname}</groupname>
                <sources>
                  <source>
                    <location>${jsw.dir}/conf</location>
                  </source>
                </sources>
              </mapping>
              <mapping>
                <directory>${rpm.path}/lib</directory>
                <filemode>664</filemode>
                <username>${rpm.username}</username>
                <groupname>${rpm.groupname}</groupname>
                <sources>
                  <source>
                    <location>${jsw.dir}/lib</location>
                  </source>
                </sources>
              </mapping>
              <mapping>
                <directory>${rpm.path}/logs</directory>
                <filemode>664</filemode>
                <username>${rpm.username}</username>
                <groupname>${rpm.groupname}</groupname>
              </mapping>
            </mappings>
            <preinstall>echo Installing ${rpm.appname} ...</preinstall>
            <postinstall>
              echo Setting dir permissions
              chmod 770 ${rpm.path}
              chmod 770 ${rpm.path}/*
              chown -R ${rpm.username}.${rpm.groupname} ${rpm.path}

              echo Configuring ${rpm.appname} init scripts
              #!/bin/sh
              ln -s ${rpm.path}/bin/${rpm.appname} /etc/init.d/${rpm.appname}

              # configure chkconfig install
              if [ -x /sbin/chkconfig ]; then
              /sbin/chkconfig --add ${rpm.appname}
              else
              ln -sf /etc/init.d/${rpm.appname} /etc/rc.d/rc3.d/S20${rpm.appname}
              ln -sf /etc/init.d/${rpm.appname} /etc/rc.d/rc5.d/S20${rpm.appname}

              ln -sf /etc/init.d/${rpm.appname} /etc/rc.d/rc0.d/K10${rpm.appname}
              ln -sf /etc/init.d/${rpm.appname} /etc/rc.d/rc1.d/K10${rpm.appname}
              ln -sf /etc/init.d/${rpm.appname} /etc/rc.d/rc2.d/K10${rpm.appname}
              ln -sf /etc/init.d/${rpm.appname} /etc/rc.d/rc4.d/K10${rpm.appname}
              ln -sf /etc/init.d/${rpm.appname} /etc/rc.d/rc6.d/K10${rpm.appname}
              fi

              echo Starting ${rpm.appname}
              su -c 'service ${rpm.appname} start' ${rpm.username}
            </postinstall>
            <preremove>
              echo Removing ${rpm.appname} ...

              #chkconfig scripts removal
              #only on uninstall, not on upgrades.
              if [ $1 = 0 ]; then
              /etc/init.d/${rpm.appname} stop
              if [ -x /sbin/chkconfig ]; then
              echo "chkconfig --del ${rpm.appname}"
              /sbin/chkconfig --del ${rpm.appname}
              else
              echo "Deleting /etc/rc.d/rc?.d/???${rpm.appname}"
              rm -f /etc/rc.d/rc?.d/???${rpm.appname}
              fi
              fi
            </preremove>

            <postremove>
              echo "Deleting /etc/init.d/${rpm.appname}"
              rm /etc/init.d/${rpm.appname}
              echo "Deleting ${rpm.path}"
              rm -Rf ${rpm.path}
              echo ${rpm.appname} is Successfully Removed!
            </postremove>
          </configuration>
        </plugin>
        <!-- end RPM plugins -->
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven-project-info-reports-plugin.version}</version>
        <configuration>
          <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${maven-jxr-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <configuration>
          <docfilessubdirs>true</docfilessubdirs>
          <quiet>true</quiet>
          <linksource>true</linksource>
          <links>
            <link>http://freemarker.org/docs/api</link>
            <link>http://docs.guava-libraries.googlecode.com/git/javadoc</link>
            <link>http://findbugs.sourceforge.net/api</link>
          </links>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <profiles>
    <profile>
      <id>gbif-jenkins</id>
      <activation>
        <property>
          <name>BUILD_NUMBER</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-test-jar</id>
                <goals>
                  <goal>test-jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                  <goal>test-jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                  <goal>test-jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>gbif-release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>enforce</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${requiredMavenVersion}</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>[${jdkLevel},)</version>
                </requireJavaVersion>
                <requirePluginVersions>
                  <message>Best Practice is to always define plugin versions!</message>
                </requirePluginVersions>
                <requireReleaseDeps>
                  <message>No Snapshot dependencies allowed!</message>
                </requireReleaseDeps>
              </rules>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-test-jar</id>
                <goals>
                  <goal>test-jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                  <goal>test-jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                  <goal>test-jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>maven-3</id>
      <activation>
        <file>
          <!--  This employs that the basedir expression is only recognized by Maven 3.x (see MNG-2363) -->
          <exists>${basedir}</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-site-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-descriptor</id>
                <goals>
                  <goal>attach-descriptor</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!--
        This profile can be used to deploy web applications to our staging server.
        To use it define a <server> and a <profile> in your Maven settings.xml file like this:

          <profile>
            <id>deploy-boma</id>
            <properties>
              <cargo.deploy-settings>gbif-boma</cargo.deploy-settings>
              <cargo.containerId>tomcat5x</cargo.containerId>
            </properties>
          </profile>

          <server>
            <id>gbif-boma</id>
            <configuration>
              <cargo.remote.uri>http://boma.gbif.org/manager</cargo.tomcat.manager.url>
              <cargo.remote.username></cargo.remote.username>
              <cargo.remote.password></cargo.remote.password>
            </configuration>
          </server>

        You can then deploy: mvn cargo:redeploy -Pdeploy-boma

        The context is your artifactId but it can be overridden by the property cargo.context.

        Notice that this will automatically skip unless for all projects without a src/main/webapp.
        See http://dev.gbif.org/issues/browse/GBIFMPOM-8
      -->
      <id>war-deploy</id>
      <activation>
        <file>
          <exists>src/main/webapp</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.cargo</groupId>
            <artifactId>cargo-maven2-plugin</artifactId>
            <version>${cargo-maven2-plugin.version}</version>

            <configuration>
              <container>
                <containerId>${cargo.containerId}</containerId>
                <type>${cargo.containerType}</type>
              </container>

              <configuration>
                <type>runtime</type>

                <properties>
                  <cargo.server.settings>${cargo.deploy-settings}</cargo.server.settings>
                </properties>
              </configuration>

              <deployables>
                <deployable>
                  <properties>
                    <context>${cargo.context}</context>
                  </properties>
                </deployable>
              </deployables>

            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!--
      As per http://dev.gbif.org/issues/browse/GBIFMPOM-10 this profile is activated when on linux, with the hope that
      "linux" means it will have rpmbuild. If the appassembler and rpm plugins have been referenced in a child pom
      then Java Service Wrapper scripts will be generated and an RPM built out of the result. For this to work the child
      must declare the following properties:

      <rpm.appname> (e.g. occurrence-processor)
      <rpm.mainclass> (e.g. org.gbif.cli.Application)

      and may override the following properties, which are set to reasonable defaults in this pom:

      <rpm.username>
      <rpm.groupname>
      <rpm.path>
      <jsw.dir>
    -->
    <profile>
      <id>rpm-possible</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <os>
          <name>linux</name>
          <family>unix</family>
        </os>
      </activation>
      <properties>
        <jsw.phase>package</jsw.phase>
        <rpm.phase>package</rpm.phase>
      </properties>
    </profile>
  </profiles>
</project>
